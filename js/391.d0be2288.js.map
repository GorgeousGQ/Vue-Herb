{"version":3,"file":"js/391.d0be2288.js","mappings":"kJAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,yBAAyBC,YAAY,CAAC,MAAQ,SAAS,OAAS,QAAQ,OAAS,WAAW,CAACH,EAAG,MAAM,CAACE,YAAY,WAAWE,MAAM,CAAC,GAAK,YAAYC,GAAG,CAAC,MAAQP,EAAIQ,iBAC/P,EACIC,EAAkB,G,4uzCCUtBC,EAAAA,YAAA,QAAAC,GACA,IAAAC,EAAA,kVACAC,EAAA,8KACA,GACAC,MAAA,SACAC,UACA,KAAAC,WAAA,KACA,KAAAC,SAAA,GAEA,EACAC,OACA,OACAC,IAAA,GAEA,EACAC,QAAA,CACAC,UAAAC,GACA,MAAAJ,EAAA,KAAAK,OAAAC,MAAAC,QACAC,QAAAC,IAAAT,GACA,MAAAU,EAAA,CACAC,gBAAA,YAEAC,MAAA,CACAC,KAAA,UACAC,QAAA,eACAC,UAAA,CACAC,SAAA,GACAC,WAAA,WAEAC,aAAA,CACAF,SAAA,GACAC,WAAA,WAEAE,KAAA,SACAC,IAAA,MAGAC,QAAA,CACAC,MAAA,EACAC,OAAA,WACAJ,KAAA,QACAC,IAAA,SACAI,QAAA,CACAC,QAAA,GACAC,YAAA,KAGAC,UAAA,CACAL,MAAA,EACAH,KAAA,OACAC,IAAA,SACAQ,YAAA,IACAC,KAAA,YACAC,OAAA,CACA,CAAAC,IAAA,IAAAC,MAAA,mBACA,CAAAD,IAAA,IAAAE,IAAA,MAAAD,MAAA,oBACA,CAAAD,IAAA,IAAAE,IAAA,MAAAD,MAAA,oBACA,CAAAD,IAAA,IAAAE,IAAA,MAAAD,MAAA,oBACA,CAAAD,IAAA,EAAAE,IAAA,MAAAD,MAAA,qBAEAjB,UAAA,CACAiB,MAAA,YAGAE,IAAA,CACAjC,IAAAG,GAAA,QACA+B,MAAA,CACAC,SAAA,CACAd,MAAA,GAGAe,OAAA,CACAf,MAAA,EACAP,UAAA,CACAiB,MAAA,aAIAM,MAAA,EACAC,UAAA,CACAF,OAAA,CACAG,UAAA,mBACAC,YAAA,qBAEAL,SAAA,CACAI,UAAA,qBAEAE,YAAA,mBACAC,WAAA,GACAC,cAAA,EACAC,cAAA,IAGAC,OAAA,CACAjB,KAAA,MACAkB,SAAA,EACAC,WAAA,EACAhD,KAAAA,IAGA,OAAAU,CACA,EAEApB,eACA,MAAAoB,EAAA,KAAAP,YACA,KAAAF,IAAAgD,UAAAvC,GAAA,EACA,EAEAwC,kBAAAC,GACAC,EAAAA,EAAAA,IAAA,YAAAD,EAAA,SAAAE,MAAAC,IACA9D,EAAAA,YAAA2D,EAAAG,EAAAtD,MACA,MAAAU,EAAA,KAAAP,UAAAgD,GACA,KAAAlD,IAAAgD,UAAAvC,GAAA,KAEA,EACAX,UACA,IAAAwD,EAAAC,SAAAC,eAAA,YACA,KAAAxD,IAAAT,EAAAA,KAAA+D,GACA,MAAA7C,EAAA,KAAAP,YACAO,GAAA,kBAAAA,GACA,KAAAT,IAAAgD,UAAAvC,GAAA,GAEA,KAAAT,IAAAZ,GAAA,SAAAqE,IAEAC,MAAAC,kBAEA,MAAAC,EAAAlE,EAAAmE,WAAAC,GACAL,EAAAM,OAAAD,IAGA,QAAAF,EAAA,OACA,MAAAV,EAAAzD,EAAAmE,GAEA,KAAAX,kBAAAC,EAAA,GAEA,GAEAc,SAAA,ICrJ8P,I,UCQ1PC,GAAY,OACd,EACArF,EACAU,GACA,EACA,KACA,KACA,MAIF,EAAe2E,EAAiB,O","sources":["webpack://app/./src/views/ChinaMap/index.vue","webpack://app/src/views/ChinaMap/index.vue","webpack://app/./src/views/ChinaMap/index.vue?ce3a","webpack://app/./src/views/ChinaMap/index.vue?2b91"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"content row-flex-start\",staticStyle:{\"width\":\"1500px\",\"height\":\"700px\",\"margin\":\"0 auto\"}},[_c('div',{staticClass:\"left_map\",attrs:{\"id\":\"left_map\"},on:{\"click\":_vm.showChinaMap}})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"content row-flex-start\" style=\"width:1500px;height:700px;margin: 0 auto;\">\r\n      <div class=\"left_map\" id=\"left_map\"  @click=\"showChinaMap\"></div>\r\n      <!-- <div class=\"right_opetate row-center\" id=\"right_opetate\">\r\n      </div> -->\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import * as echarts from 'echarts'\r\n  import china from 'echarts/map/json/china.json'\r\n  import axios from 'axios'\r\n  echarts.registerMap('china', china)\r\n    var provinces = ['shanghai', 'hebei', 'shanxi', 'neimenggu', 'liaoning', 'jilin', 'heilongjiang', 'jiangsu', 'zhejiang', 'anhui', 'fujian', 'jiangxi', 'shandong', 'henan', 'hubei', 'hunan', 'guangdong', 'guangxi', 'hainan', 'sichuan', 'guizhou', 'yunnan', 'xizang', 'shanxi1', 'gansu', 'qinghai', 'ningxia', 'xinjiang', 'beijing', 'tianjin', 'chongqing', 'xianggang', 'aomen', 'taiwan']\r\n    var provincesText = ['上海', '河北', '山西', '内蒙古', '辽宁', '吉林', '黑龙江', '江苏', '浙江', '安徽', '福建', '江西', '山东', '河南', '湖北', '湖南', '广东', '广西', '海南', '四川', '贵州', '云南', '西藏', '陕西', '甘肃', '青海', '宁夏', '新疆', '北京', '天津', '重庆', '香港', '澳门', '台湾']\r\n  export default {\r\n    props: [\"list\"],\r\n    mounted () {\r\n      this.$nextTick(() => {\r\n        this.initMap()\r\n      })\r\n    },\r\n    data () {\r\n      return {\r\n        map: {},\r\n      }\r\n    },\r\n    methods: {\r\n      getMapOpt (place) {\r\n        const data = this.$store.state.mapList\r\n        console.log(data);\r\n        const option = {\r\n        backgroundColor: '#00000000', //地图背景颜色\r\n        //以下是地图标题，我在此处设空，需要的可以自己加上\r\n        title: {\r\n            text: '查询到该中草药',\r\n            subtext: '在全国的主要分布地区详情',\r\n            textStyle:{\r\n              fontSize: 26,\r\n              fontFamily:'xingkai'\r\n            },\r\n            subtextStyle:{\r\n              fontSize: 22,\r\n              fontFamily:'xingkai'\r\n            },\r\n            left: 'center',\r\n            top: '5%'\r\n          },\r\n          //以下是地图右侧“还原”“下载”工具框\r\n          toolbox: {\r\n              show: true,\r\n              orient: 'vertical',\r\n              left: 'right',\r\n              top: 'center',\r\n              feature: {\r\n                  restore: {},\r\n                  saveAsImage: {}\r\n              }\r\n          },\r\n          visualMap:{\r\n            show: true,\r\n            left: 'left',\r\n            top: 'bottom',\r\n            seriesIndex:[0],\r\n            type:'piecewise',\r\n            pieces:[\r\n              {min: 80000, color:'rgb(254,57,101)'},\r\n              {min: 60000,max: 79999, color:'rgb(252,157,154)'},\r\n              {min: 40000,max: 59999, color:'rgb(249,205,173)'},\r\n              {min: 20000,max: 39999, color:'rgb(200,200,109)'},\r\n              {min: 0,max: 19999, color:'rgb(135,175,155)'},\r\n            ],\r\n            textStyle:{\r\n              color:'#000000'\r\n            }\r\n          },\r\n        geo: {\r\n          map: place || 'china',\r\n          label: {\r\n              emphasis: {\r\n                  show: false\r\n              },\r\n              // 不需要显示地名可直接删除normal此项\r\n              normal: {\r\n                show: true, // 是否显示对应地名\r\n                textStyle: {\r\n                    color: '#ebf1e5'\r\n                }\r\n              }\r\n          },\r\n          roam: true,\r\n          itemStyle: {\r\n              normal: {\r\n                  areaColor: 'rgb(117, 86, 39)', //地图颜色\r\n                  borderColor: 'rgb(163, 132, 85)' //地图边线颜色\r\n              },\r\n              emphasis: {\r\n                  areaColor: 'rgb(163, 132, 85)' //鼠标移入颜色\r\n              },\r\n              shadowColor:'rgba(12,0,0,0.5)',\r\n              shadowBlur: 10,\r\n              shadowOffsetY: 5,\r\n              shadowOffsetX: 5\r\n          }\r\n         },\r\n         series:{\r\n          type:'map',\r\n          geoIndex: 0,\r\n          animation: true,\r\n          data:data\r\n         }\r\n        }\r\n        return option\r\n      },\r\n      // 显示中国地图\r\n      showChinaMap () {\r\n         const option = this.getMapOpt()\r\n          this.map.setOption(option, true)\r\n      },\r\n      // 显示各省地图，这里使用axios请求本地文件，provice文件夹存在的位置为public/province（旧版本是static）\r\n      getProvinceMapOpt (provinceAlphabet) {\r\n        axios.get('province/' + provinceAlphabet + '.json').then((s) => {\r\n          echarts.registerMap(provinceAlphabet, s.data)\r\n          const option = this.getMapOpt(provinceAlphabet)\r\n          this.map.setOption(option, true)\r\n        })\r\n      },\r\n      initMap () {\r\n        var dom = document.getElementById('left_map')\r\n        this.map = echarts.init(dom)\r\n        const option = this.getMapOpt()\r\n        if (option && typeof option === 'object') {\r\n          this.map.setOption(option, true)\r\n        }\r\n        this.map.on('click', (param) => {\r\n          // console.log(param)\r\n          event.stopPropagation()// 阻止冒泡\r\n          // 找到省份名\r\n          const provinceIndex = provincesText.findIndex(x => {\r\n            return param.name === x\r\n          })\r\n          //在这里判断provincesText中是否包含点击的省份名，有则渲染省级地图，无则无处理（需要可从此获得）\r\n          if (provinceIndex === -1) return\r\n          const provinceAlphabet = provinces[provinceIndex]\r\n          // 重新渲染各省份地图\r\n          this.getProvinceMapOpt(provinceAlphabet)\r\n        })\r\n      }\r\n    },\r\n    computed: {}\r\n  }\r\n  </script>\r\n  \r\n  <style>\r\n  .left_map {\r\n    width: 100%; \r\n    height: 100%; \r\n    color: rgb(163, 132, 85);\r\n  }\r\n  /* .right_opetate {\r\n    flex: 1;\r\n    height: 100%;\r\n    background: #404a59\r\n  } */\r\n  </style>\r\n  \r\n  ","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=1c58327a&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=1c58327a&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","staticStyle","attrs","on","showChinaMap","staticRenderFns","echarts","china","provinces","provincesText","props","mounted","$nextTick","initMap","data","map","methods","getMapOpt","place","$store","state","mapList","console","log","option","backgroundColor","title","text","subtext","textStyle","fontSize","fontFamily","subtextStyle","left","top","toolbox","show","orient","feature","restore","saveAsImage","visualMap","seriesIndex","type","pieces","min","color","max","geo","label","emphasis","normal","roam","itemStyle","areaColor","borderColor","shadowColor","shadowBlur","shadowOffsetY","shadowOffsetX","series","geoIndex","animation","setOption","getProvinceMapOpt","provinceAlphabet","axios","then","s","dom","document","getElementById","param","event","stopPropagation","provinceIndex","findIndex","x","name","computed","component"],"sourceRoot":""}